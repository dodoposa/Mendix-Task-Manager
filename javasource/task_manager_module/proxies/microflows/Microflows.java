// This file was generated by Mendix Studio Pro.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package task_manager_module.proxies.microflows;

import java.util.HashMap;
import java.util.Map;
import com.mendix.core.Core;
import com.mendix.core.CoreException;
import com.mendix.systemwideinterfaces.MendixRuntimeException;
import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.systemwideinterfaces.core.IMendixObject;

public class Microflows
{
	// These are the microflows for the Task_Manager_Module module
	public static void change_Status_DONE(IContext context, task_manager_module.proxies.Task _task)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("Task", _task == null ? null : _task.getMendixObject());
		Core.microflowCall("Task_Manager_Module.Change_Status_DONE").withParams(params).execute(context);
	}
	public static void change_Status_InProgress(IContext context, task_manager_module.proxies.Task _task)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("Task", _task == null ? null : _task.getMendixObject());
		Core.microflowCall("Task_Manager_Module.Change_Status_InProgress").withParams(params).execute(context);
	}
	public static void change_Status_InProgress_Worker(IContext context, task_manager_module.proxies.Task _task)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("Task", _task == null ? null : _task.getMendixObject());
		Core.microflowCall("Task_Manager_Module.Change_Status_InProgress_Worker").withParams(params).execute(context);
	}
	public static void change_Status_InReview(IContext context, task_manager_module.proxies.Task _task)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("Task", _task == null ? null : _task.getMendixObject());
		Core.microflowCall("Task_Manager_Module.Change_Status_InReview").withParams(params).execute(context);
	}
	public static void create_Task(IContext context)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		Core.microflowCall("Task_Manager_Module.Create_Task").withParams(params).execute(context);
	}
	public static void create_User_Microflow(IContext context)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		Core.microflowCall("Task_Manager_Module.Create_User_Microflow").withParams(params).execute(context);
	}
	public static java.util.List<task_manager_module.proxies.Task> get_Worker_Tasks(IContext context, task_manager_module.proxies.User _user1)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("User1", _user1 == null ? null : _user1.getMendixObject());
		java.util.List<IMendixObject> objs = Core.microflowCall("Task_Manager_Module.Get_Worker_Tasks").withParams(params).execute(context);
		java.util.List<task_manager_module.proxies.Task> result = null;
		if (objs != null)
		{
			result = new java.util.ArrayList<>();
			for (IMendixObject obj : objs)
				result.add(task_manager_module.proxies.Task.initialize(context, obj));
		}
		return result;
	}
	public static void microflow_All_users(IContext context)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		Core.microflowCall("Task_Manager_Module.Microflow_All_users").withParams(params).execute(context);
	}
}